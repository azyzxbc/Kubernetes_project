# Generated by Django 4.1.4 on 2024-10-16 09:13

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import pgvector.django


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(blank=True, max_length=30, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Candidat',
            fields=[
                ('id_candidat', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(blank=True, max_length=50, null=True)),
                ('file_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=254, null=True)),
                ('domain', models.CharField(blank=True, max_length=254, null=True)),
                ('datenaissance', models.DateField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('sexe', models.CharField(blank=True, max_length=255, null=True)),
                ('pays_de_residence', models.CharField(blank=True, max_length=255, null=True)),
                ('poste_actuelle', models.CharField(blank=True, max_length=255, null=True)),
                ('nbrexp', models.FloatField(blank=True, null=True)),
                ('skills', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), default=list, size=None)),
                ('certificat', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), default=list, size=None)),
                ('experience', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), default=list, size=None)),
                ('formation', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), default=list, size=None)),
                ('education', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), default=list, size=None)),
                ('langues', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=255), default=list, size=None)),
                ('linkedin_url', models.CharField(blank=True, max_length=255, null=True)),
                ('source', models.CharField(blank=True, max_length=30, null=True)),
                ('archived', models.BooleanField(default=False)),
                ('status', models.CharField(default='pending', max_length=30)),
                ('embedding', pgvector.django.VectorField(dimensions=384, null=True)),
                ('embedding_cohere', pgvector.django.VectorField(dimensions=4096, null=True)),
                ('CV_Link', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Certificat',
            fields=[
                ('id_certificat', models.AutoField(primary_key=True, serialize=False)),
                ('nom_certificat', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('domaine', models.CharField(blank=True, max_length=255, null=True)),
                ('duree', models.CharField(blank=True, max_length=255, null=True)),
                ('organisation', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id_client', models.AutoField(primary_key=True, serialize=False)),
                ('nom_client', models.CharField(blank=True, max_length=255, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Formation',
            fields=[
                ('id_formation', models.AutoField(primary_key=True, serialize=False)),
                ('nom_formation', models.CharField(blank=True, max_length=255, null=True)),
                ('duree_formation', models.CharField(blank=True, db_column='Duree_formation', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file_name', models.CharField(blank=True, max_length=255, null=True)),
                ('destination', models.CharField(blank=True, max_length=55, null=True)),
                ('insertion_date', models.DateField(auto_now=True)),
                ('job_Link', models.CharField(blank=True, max_length=255, null=True)),
                ('job_status', models.CharField(default='open', max_length=30)),
                ('embedding', pgvector.django.VectorField(dimensions=384, null=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.client')),
            ],
        ),
        migrations.CreateModel(
            name='Langue',
            fields=[
                ('id_langue', models.AutoField(primary_key=True, serialize=False)),
                ('nom_langue', models.CharField(blank=True, max_length=255, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id_skills', models.AutoField(primary_key=True, serialize=False)),
                ('nom_skills', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('type_skills', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Matching',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('similarity_score', models.FloatField()),
                ('favori', models.BooleanField(default=False)),
                ('rh', models.CharField(default='not started', max_length=55)),
                ('technique', models.CharField(default='not started', max_length=55)),
                ('test_technique', models.CharField(default='not started', max_length=55)),
                ('dg', models.CharField(default='not started', max_length=55)),
                ('note', models.TextField(blank=True, max_length=1500, null=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.client')),
                ('id_candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.candidat')),
                ('id_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.job')),
            ],
        ),
        migrations.CreateModel(
            name='LinkedinProfile',
            fields=[
                ('id_profile', models.AutoField(primary_key=True, serialize=False)),
                ('keywords', models.CharField(blank=True, max_length=200, null=True)),
                ('url', models.CharField(blank=True, max_length=5000, null=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Expprof',
            fields=[
                ('id_exp', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.CharField(blank=True, max_length=255, null=True)),
                ('titre_prof', models.CharField(blank=True, max_length=255, null=True)),
                ('nom_societe', models.CharField(blank=True, max_length=255, null=True)),
                ('poste', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('technos', models.CharField(blank=True, max_length=255, null=True)),
                ('id_candidat', models.ForeignKey(db_column='id_candidat', on_delete=django.db.models.deletion.CASCADE, to='api.candidat')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id_education', models.AutoField(primary_key=True, serialize=False)),
                ('nom_ecole', models.CharField(blank=True, max_length=255, null=True)),
                ('nom_diplome', models.CharField(blank=True, max_length=255, null=True)),
                ('type_diplome', models.CharField(blank=True, max_length=255, null=True)),
                ('specialite', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'unique_together': {('nom_ecole', 'nom_diplome', 'specialite')},
            },
        ),
        migrations.CreateModel(
            name='Domaine',
            fields=[
                ('id_domaine', models.AutoField(primary_key=True, serialize=False)),
                ('nom_domaine', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.client')),
            ],
        ),
        migrations.CreateModel(
            name='CandidatHasSkills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_candidat', models.ForeignKey(db_column='id_candidat', on_delete=django.db.models.deletion.CASCADE, to='api.candidat')),
                ('id_skills', models.ForeignKey(db_column='id_skills', on_delete=django.db.models.deletion.CASCADE, to='api.skills')),
            ],
        ),
        migrations.CreateModel(
            name='CandidatHasLangue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_candidat', models.ForeignKey(db_column='id_candidat', on_delete=django.db.models.deletion.CASCADE, to='api.candidat')),
                ('id_langue', models.ForeignKey(db_column='id_langue', on_delete=django.db.models.deletion.CASCADE, to='api.langue')),
            ],
        ),
        migrations.CreateModel(
            name='CandidatHasFormation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_candidat', models.ForeignKey(db_column='id_candidat', on_delete=django.db.models.deletion.CASCADE, to='api.candidat')),
                ('id_formation', models.ForeignKey(db_column='id_formation', on_delete=django.db.models.deletion.CASCADE, to='api.formation')),
            ],
        ),
        migrations.CreateModel(
            name='CandidatHasEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_obtention', models.CharField(blank=True, max_length=255, null=True)),
                ('id_candidat', models.ForeignKey(db_column='id_candidat', on_delete=django.db.models.deletion.CASCADE, to='api.candidat')),
                ('id_education', models.ForeignKey(db_column='id_education', on_delete=django.db.models.deletion.CASCADE, to='api.education')),
            ],
        ),
        migrations.CreateModel(
            name='CandidatHasDomaine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_candidat', models.ForeignKey(db_column='id_candidat', on_delete=django.db.models.deletion.CASCADE, to='api.candidat')),
                ('id_domaine', models.ForeignKey(db_column='id_domaine', on_delete=django.db.models.deletion.CASCADE, to='api.domaine')),
            ],
        ),
        migrations.CreateModel(
            name='CandidatHasCertificat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_obtention', models.CharField(blank=True, max_length=255, null=True)),
                ('date_expiration', models.CharField(blank=True, max_length=255, null=True)),
                ('id_candidat', models.ForeignKey(db_column='id_candidat', on_delete=django.db.models.deletion.CASCADE, to='api.candidat')),
                ('id_certificat', models.ForeignKey(db_column='id_certificat', on_delete=django.db.models.deletion.CASCADE, to='api.certificat')),
            ],
        ),
        migrations.AddField(
            model_name='candidat',
            name='certificat_jointure',
            field=models.ManyToManyField(through='api.CandidatHasCertificat', to='api.certificat'),
        ),
        migrations.AddField(
            model_name='candidat',
            name='client',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.client'),
        ),
        migrations.AddField(
            model_name='candidat',
            name='domain_jointure',
            field=models.ManyToManyField(through='api.CandidatHasDomaine', to='api.domaine'),
        ),
        migrations.AddField(
            model_name='candidat',
            name='education_jointure',
            field=models.ManyToManyField(through='api.CandidatHasEducation', to='api.education'),
        ),
        migrations.AddField(
            model_name='candidat',
            name='formation_jointure',
            field=models.ManyToManyField(through='api.CandidatHasFormation', to='api.formation'),
        ),
        migrations.AddField(
            model_name='candidat',
            name='langues_jointure',
            field=models.ManyToManyField(through='api.CandidatHasLangue', to='api.langue'),
        ),
        migrations.AddField(
            model_name='candidat',
            name='skills_jointure',
            field=models.ManyToManyField(through='api.CandidatHasSkills', to='api.skills'),
        ),
        migrations.CreateModel(
            name='Archived_candidat',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('CV_Link', models.CharField(blank=True, max_length=255, null=True)),
                ('date_insertion', models.DateField(blank=True, null=True)),
                ('id_candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.candidat')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='client',
            field=models.ForeignKey(db_column='client', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.client'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddConstraint(
            model_name='matching',
            constraint=models.UniqueConstraint(fields=('id_candidat', 'id_job', 'client'), name='unique_matching'),
        ),
        migrations.AlterUniqueTogether(
            name='linkedinprofile',
            unique_together={('id_profile', 'client')},
        ),
        migrations.AlterUniqueTogether(
            name='job',
            unique_together={('file_name', 'destination', 'client')},
        ),
        migrations.AlterUniqueTogether(
            name='expprof',
            unique_together={('nom_societe', 'poste')},
        ),
        migrations.AlterUniqueTogether(
            name='candidathasskills',
            unique_together={('id_candidat', 'id_skills')},
        ),
        migrations.AlterUniqueTogether(
            name='candidathaslangue',
            unique_together={('id_candidat', 'id_langue')},
        ),
        migrations.AlterUniqueTogether(
            name='candidathasformation',
            unique_together={('id_candidat', 'id_formation')},
        ),
        migrations.AlterUniqueTogether(
            name='candidathaseducation',
            unique_together={('id_candidat', 'id_education')},
        ),
        migrations.AlterUniqueTogether(
            name='candidathasdomaine',
            unique_together={('id_candidat', 'id_domaine')},
        ),
        migrations.AlterUniqueTogether(
            name='candidathascertificat',
            unique_together={('id_candidat', 'id_certificat')},
        ),
        migrations.AlterUniqueTogether(
            name='candidat',
            unique_together={('id_candidat', 'client')},
        ),
        migrations.AddConstraint(
            model_name='archived_candidat',
            constraint=models.UniqueConstraint(fields=('id_candidat', 'id'), name='unique_archive'),
        ),
    ]
